// Generated by CoffeeScript 1.6.2
(function() {
  var encode, encodeDictionary, encodeInteger, encodeList, encodeString,
    __hasProp = {}.hasOwnProperty;

  encodeString = function(s) {
    return "" + s.length + ":" + s;
  };

  encodeInteger = function(i) {
    return "i" + i + "e";
  };

  encodeList = function(array) {
    var encodedContents, object;

    encodedContents = ((function() {
      var _i, _len, _results;

      _results = [];
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        object = array[_i];
        _results.push(encode(object));
      }
      return _results;
    })()).join('');
    return "l" + encodedContents + "e";
  };

  encodeDictionary = function(object) {
    var encodedContents, key, keys;

    keys = ((function() {
      var _results;

      _results = [];
      for (key in object) {
        if (!__hasProp.call(object, key)) continue;
        _results.push(key);
      }
      return _results;
    })()).sort();
    encodedContents = ((function() {
      var _i, _len, _results;

      _results = [];
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        _results.push("" + (encode(key)) + (encode(object[key])));
      }
      return _results;
    })()).join('');
    return "d" + encodedContents + "e";
  };

  encode = function(object) {
    switch (false) {
      case typeof object !== 'string':
        return encodeString(object);
      case typeof object !== 'number':
        return encodeInteger(0 | object);
      case '[object Array]' !== {}.toString.call(object):
        return encodeList(object);
      default:
        return encodeDictionary(object);
    }
  };

  module.exports = encode;

}).call(this);
