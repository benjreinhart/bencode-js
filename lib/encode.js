// Generated by CoffeeScript 2.0.0-beta4
void function () {
  var encode, encodeDictionary, encodeInteger, encodeList, encodeString;
  encodeString = function (s) {
    return '' + s.length + ':' + s;
  };
  encodeInteger = function (i) {
    return 'i' + i + 'e';
  };
  encodeList = function (array) {
    var encodedContents;
    encodedContents = function (accum$) {
      var object;
      for (var i$ = 0, length$ = array.length; i$ < length$; ++i$) {
        object = array[i$];
        accum$.push(encode(object));
      }
      return accum$;
    }.call(this, []).join('');
    return 'l' + encodedContents + 'e';
  };
  encodeDictionary = function (object) {
    var encodedContents, keys;
    keys = function (accum$) {
      var key;
      for (key in object) {
        if (!isOwn$(object, key))
          continue;
        accum$.push(key);
      }
      return accum$;
    }.call(this, []).sort();
    encodedContents = function (accum$) {
      var key;
      for (var i$ = 0, length$ = keys.length; i$ < length$; ++i$) {
        key = keys[i$];
        accum$.push('' + encode(key) + encode(object[key]));
      }
      return accum$;
    }.call(this, []).join('');
    return 'd' + encodedContents + 'e';
  };
  encode = function (object) {
    switch (false) {
    case !(typeof object === 'string'):
      return encodeString(object);
    case !(typeof object === 'number'):
      return encodeInteger(0 | object);
    case !('[object Array]' === {}.toString.call(object)):
      return encodeList(object);
    default:
      return encodeDictionary(object);
    }
  };
  module.exports = encode;
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
}.call(this);
