// Generated by CoffeeScript 1.6.2
(function() {
  var read;

  read = function(str) {
    var arr, bencoded, cursor, entry, entryLength, key, keyLength, obj, startPos, stringLength, value, valueLength, _ref, _ref1;

    switch (str[0]) {
      case 'i':
        bencoded = (str.match(/^i-?\d+e/))[0];
        return [bencoded.length, +bencoded.slice(1, -1)];
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
        stringLength = str.match(/^\d+/)[0];
        startPos = stringLength.length + 1;
        bencoded = str.slice(0, startPos + +stringLength);
        return [bencoded.length, bencoded.slice(startPos)];
      case 'l':
        cursor = 1;
        arr = (function() {
          var _ref, _results;

          _results = [];
          while (str[cursor] !== 'e') {
            _ref = read(str.slice(cursor)), entryLength = _ref[0], entry = _ref[1];
            cursor += entryLength;
            _results.push(entry);
          }
          return _results;
        })();
        return [cursor + 1, arr];
      case 'd':
        cursor = 1;
        obj = {};
        while (str[cursor] !== 'e') {
          _ref = read(str.slice(cursor)), keyLength = _ref[0], key = _ref[1];
          _ref1 = read(str.slice(cursor + keyLength)), valueLength = _ref1[0], value = _ref1[1];
          cursor += keyLength + valueLength;
          obj[key] = value;
        }
        return [cursor + 1, obj];
    }
  };

  module.exports = function(str) {
    return (read(str))[1];
  };

}).call(this);
